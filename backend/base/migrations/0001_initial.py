# Generated by Django 4.0.4 on 2023-03-13 13:38

import base.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='kpi_dashboard_view',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi', models.CharField(max_length=50)),
                ('min', models.IntegerField()),
                ('max', models.IntegerField()),
                ('target', models.IntegerField()),
                ('actuals', models.IntegerField()),
                ('ytd', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('performance', models.IntegerField()),
                ('score', models.IntegerField()),
                ('objective_id', models.IntegerField()),
                ('perspective_id', models.IntegerField()),
                ('scorecard_id', models.IntegerField()),
            ],
            options={
                'db_table': 'vw_kpi_actuals_score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='kpi_view',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi', models.CharField(max_length=200)),
                ('baseline', models.IntegerField()),
                ('target', models.IntegerField()),
                ('min', models.IntegerField()),
                ('max', models.IntegerField()),
                ('chart_type', models.CharField(max_length=200)),
                ('period', models.DateField()),
                ('actuals', models.IntegerField()),
            ],
            options={
                'db_table': 'kpi_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='obj_dashboard_view',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective_description', models.CharField(max_length=50)),
                ('weight', models.IntegerField()),
                ('score', models.IntegerField()),
                ('scorecard_details_id', models.IntegerField()),
                ('scorecard_id', models.IntegerField()),
            ],
            options={
                'db_table': 'vw_obj_actuals_score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='sc_dashboard_view',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scorecard_description', models.CharField(max_length=50)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('score', models.IntegerField()),
            ],
            options={
                'db_table': 'vw_sc_actuals_score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='sd_dashboard_view',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('weight', models.IntegerField()),
                ('score', models.IntegerField()),
                ('perspective_id', models.IntegerField()),
                ('scorecard_id', models.IntegerField()),
            ],
            options={
                'db_table': 'vw_per_actuals_score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='business_goals_objectives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective_code', models.CharField(max_length=100)),
                ('objective_description', models.CharField(max_length=500)),
                ('weight', models.CharField(max_length=500)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_business_goals_objectives',
            },
        ),
        migrations.CreateModel(
            name='chart_attributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('chart_type', models.CharField(max_length=300)),
                ('component', models.CharField(max_length=300)),
                ('attr_name', models.CharField(max_length=300)),
                ('attr_key', models.CharField(max_length=300)),
                ('attr_value', models.CharField(max_length=300)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_chart_attributes',
            },
        ),
        migrations.CreateModel(
            name='config_codes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_type', models.CharField(max_length=10)),
                ('config_code', models.CharField(max_length=5)),
                ('config_value', models.CharField(max_length=50)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_config_codes',
            },
        ),
        migrations.CreateModel(
            name='currencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_code', models.CharField(max_length=3, unique=True)),
                ('currency_name', models.CharField(max_length=100, unique=True)),
                ('sign', models.CharField(max_length=5, unique=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_currencies',
            },
        ),
        migrations.CreateModel(
            name='kpi_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_code', models.CharField(max_length=100)),
                ('kpi', models.CharField(max_length=200)),
                ('ytd', models.CharField(default='none', max_length=50)),
                ('frequency', models.CharField(max_length=200)),
                ('period_type', models.CharField(max_length=200)),
                ('weight', models.CharField(max_length=200)),
                ('measure', models.CharField(max_length=200)),
                ('baseline', models.IntegerField()),
                ('target', models.IntegerField()),
                ('min', models.IntegerField()),
                ('max', models.IntegerField()),
                ('optimization', models.CharField(max_length=200)),
                ('chart_type', models.CharField(max_length=200)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('objective_id', models.ForeignKey(db_column='objective_id', on_delete=django.db.models.deletion.CASCADE, to='base.business_goals_objectives')),
            ],
            options={
                'db_table': 'tb_sc_kpi_details',
            },
        ),
        migrations.CreateModel(
            name='kpi_pending_actions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('kpi', models.CharField(max_length=500)),
                ('message', models.CharField(max_length=500)),
                ('upcoming_date', models.DateTimeField(max_length=500)),
                ('kpi_id', models.IntegerField(default='0')),
                ('show_flag', models.CharField(default='Y', max_length=1)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_kpi_pending_actions',
            },
        ),
        migrations.CreateModel(
            name='navigation_menu_details',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_name', models.CharField(max_length=300, unique=True)),
                ('parent_menu_id', models.IntegerField()),
                ('url', models.CharField(max_length=300)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_navigation_menu_details',
            },
        ),
        migrations.CreateModel(
            name='org_definition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=300)),
                ('address_1', models.CharField(max_length=300)),
                ('address_2', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('no_of_org_functional_levels', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_org_definition',
            },
        ),
        migrations.CreateModel(
            name='org_functional_hierarchy',
            fields=[
                ('functional_level_id', models.AutoField(primary_key=True, serialize=False)),
                ('functional_level_code', models.CharField(max_length=300)),
                ('parent_level_id', models.IntegerField()),
                ('main_parent_id', models.IntegerField()),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_org_functional_hierarchy',
            },
        ),
        migrations.CreateModel(
            name='org_functional_level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hierarchy_level', models.IntegerField(unique=True)),
                ('hierarchy_name', models.CharField(max_length=300)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_org_functional_level',
            },
        ),
        migrations.CreateModel(
            name='perspectives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perspective_code', models.CharField(max_length=50, unique=True)),
                ('perspective', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_perspectives',
            },
        ),
        migrations.CreateModel(
            name='scorecard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scorecard_description', models.CharField(max_length=100)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('functional_hierarchy_level', models.ForeignKey(db_column='functional_level_id', on_delete=django.db.models.deletion.CASCADE, to='base.org_functional_hierarchy')),
            ],
            options={
                'db_table': 'tb_sc_scorecard',
            },
        ),
        migrations.CreateModel(
            name='settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_name', models.CharField(max_length=300)),
                ('value', models.CharField(max_length=300)),
                ('user_id', models.IntegerField()),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_settings',
            },
        ),
        migrations.CreateModel(
            name='uom_masters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom_code', models.CharField(max_length=5, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
            ],
            options={
                'db_table': 'tb_sc_uom_masters',
            },
        ),
        migrations.CreateModel(
            name='user_access_definition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add', models.CharField(default='N', max_length=1)),
                ('edit', models.CharField(default='N', max_length=1)),
                ('view', models.CharField(default='N', max_length=1)),
                ('delete', models.CharField(default='N', max_length=1)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('menu_id', models.ForeignKey(db_column='menu_id', max_length=5, on_delete=django.db.models.deletion.CASCADE, to='base.navigation_menu_details')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tb_sc_user_access_definition',
            },
        ),
        migrations.CreateModel(
            name='scorecard_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.CharField(max_length=500)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('perspective_id', models.ForeignKey(db_column='perspective_id', on_delete=django.db.models.deletion.CASCADE, to='base.perspectives')),
                ('scorecard_id', models.ForeignKey(db_column='scorecard_id', on_delete=django.db.models.deletion.CASCADE, to='base.scorecard')),
            ],
            options={
                'db_table': 'tb_sc_scorecard_details',
            },
        ),
        migrations.CreateModel(
            name='org_settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year_start', models.CharField(max_length=100)),
                ('week_start', models.CharField(max_length=100)),
                ('logo', models.ImageField(upload_to=base.models.upload_path)),
                ('number_format_decimals', models.IntegerField()),
                ('number_format_comma_seperator', models.CharField(max_length=1)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('reporting_currency', models.ForeignKey(db_column='reporting_currency', on_delete=django.db.models.deletion.CASCADE, to='base.currencies')),
            ],
            options={
                'db_table': 'tb_sc_org_settings',
            },
        ),
        migrations.AddField(
            model_name='org_functional_hierarchy',
            name='hierarchy_level',
            field=models.ForeignKey(db_column='hierarchy_level', on_delete=django.db.models.deletion.CASCADE, to='base.org_functional_level'),
        ),
        migrations.CreateModel(
            name='org_definition_stop_light_indicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_light_indicator_from', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stop_light_indicator_to', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stop_light_indicator', models.CharField(max_length=50)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('def_id', models.ForeignKey(db_column='def_id', on_delete=django.db.models.deletion.CASCADE, to='base.org_definition')),
            ],
            options={
                'db_table': 'tb_sc_org_definition_stop_light_indicators',
            },
        ),
        migrations.CreateModel(
            name='kpi_user_access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('kpi_id', models.ForeignKey(db_column='kpi_id', on_delete=django.db.models.deletion.CASCADE, to='base.kpi_details')),
            ],
            options={
                'db_table': 'tb_sc_kpi_user_access',
            },
        ),
        migrations.CreateModel(
            name='kpi_stop_light_indicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_light_indicator_from', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stop_light_indicator_to', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stop_light_indicator', models.CharField(max_length=50)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('kpi_id', models.ForeignKey(db_column='kpi_id', on_delete=django.db.models.deletion.CASCADE, to='base.kpi_details')),
            ],
            options={
                'db_table': 'tb_sc_kpi_stop_light_indicators',
            },
        ),
        migrations.CreateModel(
            name='kpi_sli',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sli_from', models.IntegerField()),
                ('sli_to', models.IntegerField()),
                ('sli', models.CharField(max_length=10)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('kpi_id', models.ForeignKey(db_column='kpi_id', on_delete=django.db.models.deletion.CASCADE, to='base.kpi_details')),
            ],
            options={
                'db_table': 'tb_sc_kpi_sli',
            },
        ),
        migrations.AddField(
            model_name='kpi_details',
            name='perspective_id',
            field=models.ForeignKey(db_column='perspective_id', on_delete=django.db.models.deletion.CASCADE, to='base.perspectives'),
        ),
        migrations.AddField(
            model_name='kpi_details',
            name='scorecard_details_id',
            field=models.ForeignKey(db_column='scorecard_details_id', on_delete=django.db.models.deletion.CASCADE, to='base.scorecard_details'),
        ),
        migrations.AddField(
            model_name='kpi_details',
            name='scorecard_id',
            field=models.ForeignKey(db_column='scorecard_id', on_delete=django.db.models.deletion.CASCADE, to='base.scorecard'),
        ),
        migrations.CreateModel(
            name='kpi_actuals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('actuals', models.IntegerField()),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('kpi_id', models.ForeignKey(db_column='kpi_id', on_delete=django.db.models.deletion.CASCADE, to='base.kpi_details')),
                ('objective_id', models.ForeignKey(db_column='objective_id', on_delete=django.db.models.deletion.CASCADE, to='base.business_goals_objectives')),
                ('perspective_id', models.ForeignKey(db_column='perspective_id', on_delete=django.db.models.deletion.CASCADE, to='base.perspectives')),
                ('scorecard_id', models.ForeignKey(db_column='scorecard_id', on_delete=django.db.models.deletion.CASCADE, to='base.scorecard')),
            ],
            options={
                'db_table': 'tb_sc_kpi_actuals',
            },
        ),
        migrations.CreateModel(
            name='group_access_definition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add', models.CharField(default='N', max_length=1)),
                ('edit', models.CharField(default='N', max_length=1)),
                ('view', models.CharField(default='N', max_length=1)),
                ('delete', models.CharField(default='N', max_length=1)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('group_id', models.ForeignKey(db_column='group_id', on_delete=django.db.models.deletion.CASCADE, related_name='group', to='auth.group')),
                ('menu_id', models.ForeignKey(db_column='menu_id', max_length=5, on_delete=django.db.models.deletion.CASCADE, to='base.navigation_menu_details')),
            ],
            options={
                'db_table': 'tb_sc_group_access_definition',
            },
        ),
        migrations.AddConstraint(
            model_name='config_codes',
            constraint=models.UniqueConstraint(fields=('config_type', 'config_code'), name='unique_config_type_config_code'),
        ),
        migrations.AddField(
            model_name='business_goals_objectives',
            name='scorecard_details_id',
            field=models.ForeignKey(db_column='scorecard_details_id', on_delete=django.db.models.deletion.CASCADE, to='base.scorecard_details'),
        ),
        migrations.AddField(
            model_name='business_goals_objectives',
            name='scorecard_id',
            field=models.ForeignKey(db_column='scorecard_id', on_delete=django.db.models.deletion.CASCADE, to='base.scorecard'),
        ),
        migrations.AddConstraint(
            model_name='scorecard_details',
            constraint=models.UniqueConstraint(fields=('perspective_id', 'scorecard_id'), name='unique_perspective_id_scorecard_id'),
        ),
        migrations.AddConstraint(
            model_name='kpi_details',
            constraint=models.UniqueConstraint(fields=('perspective_id', 'objective_id', 'scorecard_id', 'kpi_code'), name='unique_perspective_code_objective_code_scorecard_id_kpi_code'),
        ),
        migrations.AddConstraint(
            model_name='business_goals_objectives',
            constraint=models.UniqueConstraint(fields=('scorecard_id', 'scorecard_details_id', 'objective_code'), name='unique_scorecard_id_scorecard_details_id_objective_code'),
        ),
    ]
