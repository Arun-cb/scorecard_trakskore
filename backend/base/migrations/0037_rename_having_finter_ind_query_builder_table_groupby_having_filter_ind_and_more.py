# Generated by Django 4.0.4 on 2023-11-21 17:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0036_query_builder_table_table_id_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='query_builder_table_groupby',
            old_name='having_finter_ind',
            new_name='having_filter_ind',
        ),
        migrations.AddField(
            model_name='query_builder_table_alias',
            name='col_alias_column_id',
            field=models.ForeignKey(db_column='col_alias_column_id', default=1, on_delete=django.db.models.deletion.CASCADE, to='base.query_builder_table_columns'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='query_builder_aggeration_function_table',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('agg_fun_name', models.CharField(max_length=255, null=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_by', models.IntegerField()),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('delete_flag', models.CharField(default='N', max_length=1)),
                ('table_aggragate_query_id', models.ForeignKey(db_column='table_aggragate_query_id', on_delete=django.db.models.deletion.CASCADE, to='base.query_definition')),
                ('table_aggregate_column_id', models.ForeignKey(db_column='table_aggregate_column_id', on_delete=django.db.models.deletion.CASCADE, to='base.query_builder_table_columns')),
                ('table_aggregate_table_id', models.ForeignKey(db_column='table_aggregate_table_id', on_delete=django.db.models.deletion.CASCADE, to='base.query_builder_table')),
            ],
            options={
                'db_table': 'tb_sqb_query_builder_aggreation_table',
            },
        ),
    ]
